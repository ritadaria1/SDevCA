2018-02-20 18:59:49 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "PLAY_EVOLUTIONS" not found; SQL statement:
select id, hash, apply_script, revert_script, state, last_problem from play_evolutions where state like 'applying_%' [42102-193]
2019-03-15 16:26:09 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Column "STARTDATE" not found; SQL statement:
insert into projects (id,department_id,name,description,startDate) values ( 1,5,'Kettle','Steel Electric Kettle','18/12/2018' ) [42122-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.table.Table.getColumn(Table.java:682)
	at org.h2.command.Parser.parseColumn(Parser.java:878)
	at org.h2.command.Parser.parseColumnList(Parser.java:862)
	at org.h2.command.Parser.parseInsert(Parser.java:1062)
	at org.h2.command.Parser.parsePrepared(Parser.java:413)
	at org.h2.command.Parser.parse(Parser.java:317)
	at org.h2.command.Parser.parse(Parser.java:289)
	at org.h2.command.Parser.prepareCommand(Parser.java:254)
	at org.h2.engine.Session.prepareLocal(Session.java:561)
	at org.h2.engine.Session.prepareCommand(Session.java:502)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1203)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:170)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at play.api.db.evolutions.DatabaseEvolutions.execute(EvolutionsApi.scala:329)
	at play.api.db.evolutions.DatabaseEvolutions.$anonfun$evolve$4(EvolutionsApi.scala:212)
	at play.api.db.evolutions.DatabaseEvolutions.$anonfun$evolve$4$adapted(EvolutionsApi.scala:212)
	at scala.collection.IndexedSeqOptimized.foreach(IndexedSeqOptimized.scala:32)
	at scala.collection.IndexedSeqOptimized.foreach$(IndexedSeqOptimized.scala:29)
	at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:38)
	at play.api.db.evolutions.DatabaseEvolutions.$anonfun$evolve$3(EvolutionsApi.scala:212)
	at play.api.db.evolutions.DatabaseEvolutions.$anonfun$evolve$3$adapted(EvolutionsApi.scala:207)
	at scala.collection.immutable.List.foreach(List.scala:389)
	at play.api.db.evolutions.DatabaseEvolutions.evolve(EvolutionsApi.scala:207)
	at play.api.db.evolutions.DefaultEvolutionsApi.evolve(EvolutionsApi.scala:97)
	at play.api.db.evolutions.EvolutionsWebCommands.handleWebCommand(ApplicationEvolutions.scala:366)
	at play.core.DefaultWebCommands.$anonfun$handleWebCommand$1(WebCommands.scala:40)
	at scala.collection.immutable.Stream.flatMap(Stream.scala:486)
	at play.core.DefaultWebCommands.handleWebCommand(WebCommands.scala:40)
	at play.core.server.DevServerStart$$anon$1.$anonfun$handleWebCommand$1(DevServerStart.scala:134)
	at scala.Option.flatMap(Option.scala:171)
	at play.core.server.DevServerStart$$anon$1.handleWebCommand(DevServerStart.scala:134)
	at play.core.server.Server.getHandlerFor(Server.scala:56)
	at play.core.server.Server.getHandlerFor$(Server.scala:48)
	at play.core.server.AkkaHttpServer.getHandlerFor(AkkaHttpServer.scala:41)
	at play.core.server.AkkaHttpServer.getHandler(AkkaHttpServer.scala:214)
	at play.core.server.AkkaHttpServer.handleRequest(AkkaHttpServer.scala:194)
	at play.core.server.AkkaHttpServer.$anonfun$createServerBinding$1(AkkaHttpServer.scala:106)
	at akka.stream.impl.fusing.MapAsync$$anon$24.onPush(Ops.scala:1191)
	at akka.stream.impl.fusing.GraphInterpreter.processPush(GraphInterpreter.scala:512)
	at akka.stream.impl.fusing.GraphInterpreter.processEvent(GraphInterpreter.scala:475)
	at akka.stream.impl.fusing.GraphInterpreter.execute(GraphInterpreter.scala:371)
	at akka.stream.impl.fusing.GraphInterpreterShell.runBatch(ActorGraphInterpreter.scala:584)
	at akka.stream.impl.fusing.GraphInterpreterShell$AsyncInput.execute(ActorGraphInterpreter.scala:468)
	at akka.stream.impl.fusing.GraphInterpreterShell.processEvent(ActorGraphInterpreter.scala:559)
	at akka.stream.impl.fusing.ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$processEvent(ActorGraphInterpreter.scala:741)
	at akka.stream.impl.fusing.ActorGraphInterpreter$$anonfun$receive$1.applyOrElse(ActorGraphInterpreter.scala:756)
	at akka.actor.Actor.aroundReceive(Actor.scala:517)
	at akka.actor.Actor.aroundReceive$(Actor.scala:515)
	at akka.stream.impl.fusing.ActorGraphInterpreter.aroundReceive(ActorGraphInterpreter.scala:666)
	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:527)
	at akka.actor.ActorCell.invoke(ActorCell.scala:496)
	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257)
	at akka.dispatch.Mailbox.run(Mailbox.scala:224)
	at akka.dispatch.Mailbox.exec(Mailbox.scala:234)
	at akka.dispatch.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
	at akka.dispatch.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)
	at akka.dispatch.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)
	at akka.dispatch.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)
2019-03-15 16:37:39 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "PRODUCT" not found; SQL statement:
update product set category_id = 1 where category_id is null [42102-193]
2019-03-16 19:25:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Cannot parse "DATE" constant "01-12-2017"; SQL statement:
insert into projects (id,department_id,name,description,start_date) values ( 11,3,'David Butler','New map', '01-12-2017' ) -- (11, 3, 'David Butler', 'New map', '01-12-2017') [22007-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:168)
	at org.h2.value.ValueDate.parse(ValueDate.java:81)
	at org.h2.value.Value.convertTo(Value.java:928)
	at org.h2.table.Column.convert(Column.java:149)
	at org.h2.command.dml.Insert.insertRows(Insert.java:143)
	at org.h2.command.dml.Insert.update(Insert.java:114)
	at org.h2.command.CommandContainer.update(CommandContainer.java:98)
	at org.h2.command.Command.executeUpdate(Command.java:258)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at play.api.db.evolutions.DatabaseEvolutions.execute(EvolutionsApi.scala:329)
	at play.api.db.evolutions.DatabaseEvolutions.$anonfun$evolve$4(EvolutionsApi.scala:212)
	at play.api.db.evolutions.DatabaseEvolutions.$anonfun$evolve$4$adapted(EvolutionsApi.scala:212)
	at scala.collection.IndexedSeqOptimized.foreach(IndexedSeqOptimized.scala:32)
	at scala.collection.IndexedSeqOptimized.foreach$(IndexedSeqOptimized.scala:29)
	at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:38)
	at play.api.db.evolutions.DatabaseEvolutions.$anonfun$evolve$3(EvolutionsApi.scala:212)
	at play.api.db.evolutions.DatabaseEvolutions.$anonfun$evolve$3$adapted(EvolutionsApi.scala:207)
	at scala.collection.immutable.List.foreach(List.scala:389)
	at play.api.db.evolutions.DatabaseEvolutions.evolve(EvolutionsApi.scala:207)
	at play.api.db.evolutions.DefaultEvolutionsApi.evolve(EvolutionsApi.scala:97)
	at play.api.db.evolutions.EvolutionsWebCommands.handleWebCommand(ApplicationEvolutions.scala:366)
	at play.core.DefaultWebCommands.$anonfun$handleWebCommand$1(WebCommands.scala:40)
	at scala.collection.immutable.Stream.flatMap(Stream.scala:486)
	at play.core.DefaultWebCommands.handleWebCommand(WebCommands.scala:40)
	at play.core.server.DevServerStart$$anon$1.$anonfun$handleWebCommand$1(DevServerStart.scala:134)
	at scala.Option.flatMap(Option.scala:171)
	at play.core.server.DevServerStart$$anon$1.handleWebCommand(DevServerStart.scala:134)
	at play.core.server.Server.getHandlerFor(Server.scala:56)
	at play.core.server.Server.getHandlerFor$(Server.scala:48)
	at play.core.server.AkkaHttpServer.getHandlerFor(AkkaHttpServer.scala:41)
	at play.core.server.AkkaHttpServer.getHandler(AkkaHttpServer.scala:214)
	at play.core.server.AkkaHttpServer.handleRequest(AkkaHttpServer.scala:194)
	at play.core.server.AkkaHttpServer.$anonfun$createServerBinding$1(AkkaHttpServer.scala:106)
	at akka.stream.impl.fusing.MapAsync$$anon$24.onPush(Ops.scala:1191)
	at akka.stream.impl.fusing.GraphInterpreter.processPush(GraphInterpreter.scala:512)
	at akka.stream.impl.fusing.GraphInterpreter.processEvent(GraphInterpreter.scala:475)
	at akka.stream.impl.fusing.GraphInterpreter.execute(GraphInterpreter.scala:371)
	at akka.stream.impl.fusing.GraphInterpreterShell.runBatch(ActorGraphInterpreter.scala:584)
	at akka.stream.impl.fusing.GraphInterpreterShell$AsyncInput.execute(ActorGraphInterpreter.scala:468)
	at akka.stream.impl.fusing.GraphInterpreterShell.processEvent(ActorGraphInterpreter.scala:559)
	at akka.stream.impl.fusing.ActorGraphInterpreter.akka$stream$impl$fusing$ActorGraphInterpreter$$processEvent(ActorGraphInterpreter.scala:741)
	at akka.stream.impl.fusing.ActorGraphInterpreter$$anonfun$receive$1.applyOrElse(ActorGraphInterpreter.scala:756)
	at akka.actor.Actor.aroundReceive(Actor.scala:517)
	at akka.actor.Actor.aroundReceive$(Actor.scala:515)
	at akka.stream.impl.fusing.ActorGraphInterpreter.aroundReceive(ActorGraphInterpreter.scala:666)
	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:527)
	at akka.actor.ActorCell.invoke(ActorCell.scala:496)
	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257)
	at akka.dispatch.Mailbox.run(Mailbox.scala:224)
	at akka.dispatch.Mailbox.exec(Mailbox.scala:234)
	at akka.dispatch.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
	at akka.dispatch.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)
	at akka.dispatch.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)
	at akka.dispatch.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)
Caused by: java.lang.IllegalArgumentException: 1-12-2017
	at org.h2.util.DateTimeUtils.parseDateValue(DateTimeUtils.java:319)
	at org.h2.value.ValueDate.parse(ValueDate.java:79)
	... 55 more
